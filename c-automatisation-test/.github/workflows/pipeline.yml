name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Étape de vérification (par exemple, installer les dépendances)
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  # Étape de test
  test:
    runs-on: ubuntu-latest
    needs: setup  # Cette étape dépend de l'étape précédente
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Run tests
        run: |
          pytest tests/
          
  # Étape de build/packaging
  build:
    runs-on: ubuntu-latest
    needs: test  # Cette étape dépend de l'étape de test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Build Docker image
        run: |
          docker build -t myapp:latest .
          
  # Étape de déploiement
  deploy:
    runs-on: ubuntu-latest
    needs: build  # Cette étape dépend de l'étape de build
    if: github.event_name == 'push'  # Déployer seulement sur `push`
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Deploy to Production
        run: |
          echo "Déploiement de l'application en cours..."
          # Ajoute ici les commandes pour le déploiement, comme `kubectl apply` ou `docker push`
